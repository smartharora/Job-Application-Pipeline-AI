on:
  push:
    tags:
      - 'v*'
name: publish
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: |
        pytest tests/ --junitxml=tests/test-results.xml --tb=long -vv --cov=./ --cov-report=xml:tests/coverage.xml

      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: tests/test-results.xml

    - name: Upload coverage results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-results
        path: tests/coverage.xml

    - name: Annotate the test results
      if: failure()
      uses: dorny/test-reporter@v1
      with:
        name: Pytest
        path: tests/test-results.xml
        reporter: pytest
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install build dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install build
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
  github-release:
    name: Sign the Python üêç dist üì¶ with Sigstore and upload them to GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: |
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    runs-on: ubuntu-latest
    needs: github-release
    environment:
      name: pypi
      url: https://pypi.org/p/ResumeGPT
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI }}
